// SPDX-License-Identifier: MIT
pragma solidity 0.8.17;

// This contract deploys any contract using it's bytecode.
contract Bytecode {
    function deploy(bytes memory bytecode) public returns (address) {
        // Test.
        // bytes memory bytecode = hex"608060405234801561001057600080fd5b5033600052600060205260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6020557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000523360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206000a35061080a806100c36000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806370a082311161006657806370a082311461013457806376809ce31461016457806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610582565b60405180910390f35b6100d060048036038101906100cb919061063d565b61023b565b6040516100dd9190610698565b60405180910390f35b6100ee610292565b6040516100fb91906106c2565b60405180910390f35b61011e600480360381019061011991906106dd565b6102a0565b60405161012b9190610698565b60405180910390f35b61014e60048036038101906101499190610730565b6103bf565b60405161015b91906106c2565b60405180910390f35b61016c6103db565b6040516101799190610779565b60405180910390f35b61018a6103e8565b6040516101979190610582565b60405180910390f35b6101ba60048036038101906101b5919061063d565b610423565b6040516101c79190610698565b60405180910390f35b6101ea60048036038101906101e59190610794565b6104c9565b6040516101f791906106c2565b60405180910390f35b606060405160208152600960208201527f59756c20546f6b656e00000000000000000000000000000000000000000000006040820152606081f35b60003360005260016020526020600020836000528060205260406000208381558360005284337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560206000a3600160005260206000f35b600060025460005260206000f35b60006040518460005260016020526020600020336000528060205260406000208054858110156102fe577ff180d8f9000000000000000000000000000000000000000000000000000000008452876004850152336024850152604484fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561032c5785810382555b878452600060208501526040842080548781101561036e577ff4d678b80000000000000000000000000000000000000000000000000000000060005260046000fd5b8781038255888652600060208701526040862080548981018255896000528a8c7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206000a3600160005260206000f35b6000600435600052600060205260406000205460005260206000f35b6000601260005260206000f35b606060405160208152600360208201527f59554c00000000000000000000000000000000000000000000000000000000006020820152606081f35b6000604051338152600060208201526040812080548481101561046a577ff4d678b80000000000000000000000000000000000000000000000000000000060005260046000fd5b85330361047657600080fd5b848103808355868452600060208501526040842080548781018083558860005289337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206000a3600160005260206000f35b600082600052600160205260206000208260005280602052604060002080548060005260206000f35b600081519050919050565b600082825260208201905092915050565b60005b8381101561052c578082015181840152602081019050610511565b60008484015250505050565b6000601f19601f8301169050919050565b6000610554826104f2565b61055e81856104fd565b935061056e81856020860161050e565b61057781610538565b840191505092915050565b6000602082019050818103600083015261059c8184610549565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105d4826105a9565b9050919050565b6105e4816105c9565b81146105ef57600080fd5b50565b600081359050610601816105db565b92915050565b6000819050919050565b61061a81610607565b811461062557600080fd5b50565b60008135905061063781610611565b92915050565b60008060408385031215610654576106536105a4565b5b6000610662858286016105f2565b925050602061067385828601610628565b9150509250929050565b60008115159050919050565b6106928161067d565b82525050565b60006020820190506106ad6000830184610689565b92915050565b6106bc81610607565b82525050565b60006020820190506106d760008301846106b3565b92915050565b6000806000606084860312156106f6576106f56105a4565b5b6000610704868287016105f2565b9350506020610715868287016105f2565b925050604061072686828701610628565b9150509250925092565b600060208284031215610746576107456105a4565b5b6000610754848285016105f2565b91505092915050565b600060ff82169050919050565b6107738161075d565b82525050565b600060208201905061078e600083018461076a565b92915050565b600080604083850312156107ab576107aa6105a4565b5b60006107b9858286016105f2565b92505060206107ca858286016105f2565b915050925092905056fea264697066735822122045c11c816002a008eeaf99011bced4ab47b1aaf8d0f34e1ad915f25c59db3cfb64736f6c63430008110033";
        assembly {
            let addr := create(0, add(bytecode, 0x20), mload(bytecode))
            if iszero(addr) {
                revert(0x00, 0x00)
            }
            mstore(0x00, addr)
            return(0x00, 0x20)
        }
    }
}